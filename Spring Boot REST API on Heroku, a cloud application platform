



Create a new Spring Boot application: You can use the Spring Initializer to create a new Spring Boot application, or you can use an existing one.

Prepare the application for deployment: You need to make a few changes to your Spring Boot application so that it can be deployed on Heroku. 

For example, you need to specify the port that your application will run on, as Heroku dynamically assigns a port to your application.

You can do this by adding the following code to your application.properties file:


#### server.port=${PORT:8080}


This code tells Spring Boot to use the PORT environment variable as the port, or 8080 as the default.

Create a Procfile: Heroku uses the Procfile file to define the command that will run your application. 

 You can create this file in the root directory of your project and add the following line:
 
 ####  heroku create <your-app-name>

Replace <your-jar-file> with the name of the jar file that was generated when you built your Spring Boot application.

Create a Heroku app: You can create a new Heroku app using the Heroku CLI or the Heroku Dashboard.

To create a new app using the CLI, you can use the following command:

#### heroku create <your-app-name>

Replace <your-app-name> with a unique name for your app.

Deploy your application: You can deploy your Spring Boot application to Heroku by pushing your code to the Heroku Git repository that was created when you created your app. 

You can do this by running the following commands:

```

git init

git add .

git commit -m "Initial commit"

heroku git:remote -a <your-app-name>

git push heroku master

```
These commands initialize a new Git repository, add all of the files in your project, commit the changes, and push the code to the Heroku Git repository.

Verify the deployment: 

You can verify that your Spring Boot REST API has been deployed by visiting the URL of your app, which you can find by running the following command:

#### heroku open

This is a high-level overview of the steps required to deploy a Spring Boot REST API on Heroku. 

For more information on deploying to Heroku, you can refer to the Heroku documentation.

